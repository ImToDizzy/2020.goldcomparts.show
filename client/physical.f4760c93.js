import { S as SvelteComponentDev, i as init, d as dispatch_dev, s as safe_not_equal, b as validate_slots, f as space, e as element, t as text, w as query_selector_all, l as detach_dev, h as claim_space, g as claim_element, j as children, k as claim_text, m as attr_dev, n as add_location, o as insert_dev, p as append_dev, r as noop } from './client.4e401bf2.js';

/* src/routes/physical.svelte generated by Svelte v3.24.0 */

const file = "src/routes/physical.svelte";

function create_fragment(ctx) {
	let t0;
	let section0;
	let div1;
	let div0;
	let h1;
	let t1;
	let t2;
	let ul0;
	let li0;
	let a0;
	let t3;
	let t4;
	let li1;
	let a1;
	let t5;
	let t6;
	let li2;
	let a2;
	let t7;
	let t8;
	let section5;
	let section1;
	let h20;
	let t9;
	let t10;
	let p0;
	let t11;
	let t12;
	let ul1;
	let li3;
	let t13;
	let t14;
	let li4;
	let t15;
	let t16;
	let li5;
	let t17;
	let t18;
	let li6;
	let t19;
	let t20;
	let li7;
	let t21;
	let t22;
	let p1;
	let t23;
	let strong;
	let t24;
	let t25;
	let t26;
	let p2;
	let t27;
	let a3;
	let t28;
	let t29;
	let t30;
	let img;
	let img_src_value;
	let t31;
	let section2;
	let h21;
	let t32;
	let t33;
	let p3;
	let t34;
	let t35;
	let p4;
	let t36;
	let t37;
	let section3;
	let h22;
	let t38;
	let t39;
	let p5;
	let t40;
	let t41;
	let ul2;
	let li8;
	let t42;
	let t43;
	let li9;
	let t44;
	let t45;
	let li10;
	let t46;
	let t47;
	let li11;
	let t48;
	let t49;
	let li12;
	let t50;
	let t51;
	let li13;
	let t52;
	let t53;
	let li14;
	let t54;
	let t55;
	let section4;
	let h23;
	let t56;
	let t57;
	let p6;
	let t58;
	let a4;
	let t59;
	let t60;
	let t61;
	let p7;
	let t62;
	let t63;
	let ul3;
	let li15;
	let t64;
	let t65;
	let li16;
	let t66;
	let t67;
	let li17;
	let t68;
	let t69;
	let li18;
	let t70;

	const block = {
		c: function create() {
			t0 = space();
			section0 = element("section");
			div1 = element("div");
			div0 = element("div");
			h1 = element("h1");
			t1 = text("How to find us");
			t2 = space();
			ul0 = element("ul");
			li0 = element("li");
			a0 = element("a");
			t3 = text("Location");
			t4 = space();
			li1 = element("li");
			a1 = element("a");
			t5 = text("Covid Guidance");
			t6 = space();
			li2 = element("li");
			a2 = element("a");
			t7 = text("Visiting in Person");
			t8 = space();
			section5 = element("section");
			section1 = element("section");
			h20 = element("h2");
			t9 = text("How to get here");
			t10 = space();
			p0 = element("p");
			t11 = text("Goldsmiths is in New Cross, South East London, five miles from central London.");
			t12 = space();
			ul1 = element("ul");
			li3 = element("li");
			t13 = text("St. James Hatcham Building");
			t14 = space();
			li4 = element("li");
			t15 = text("25 St James's");
			t16 = space();
			li5 = element("li");
			t17 = text("Goldsmiths, University of London");
			t18 = space();
			li6 = element("li");
			t19 = text("New Cross");
			t20 = space();
			li7 = element("li");
			t21 = text("London SE14 6AD");
			t22 = space();
			p1 = element("p");
			t23 = text("When visiting St. James Hatcham Building, turn off New Cross road and \n      walk up St James. The St James Hatcham Building is the ");
			strong = element("strong");
			t24 = text("church");
			t25 = text(" \n      at the end of the road.");
			t26 = space();
			p2 = element("p");
			t27 = text("For more information ");
			a3 = element("a");
			t28 = text("click here");
			t29 = text(".");
			t30 = space();
			img = element("img");
			t31 = space();
			section2 = element("section");
			h21 = element("h2");
			t32 = text("Public Transport");
			t33 = space();
			p3 = element("p");
			t34 = text("The following buses stop outside Goldsmiths: \n      21, 36, 53, 136, 171, 172, 177, 225, 321, 343, 436 and 453.");
			t35 = space();
			p4 = element("p");
			t36 = text("Goldsmiths is less than five minutesâ€™ \n      walk from both New Cross and New Cross Gate \n      railway and overground stations.");
			t37 = space();
			section3 = element("section");
			h22 = element("h2");
			t38 = text("COVID Guidance");
			t39 = space();
			p5 = element("p");
			t40 = text("It is important to us that visitors and staff feel safe and comfortable in the \n      exhibition. To this end we are taking a number of precautions. \n      Please do follow the guidelines below to ensure you have a \n      safe and pleasant visit:");
			t41 = space();
			ul2 = element("ul");
			li8 = element("li");
			t42 = text("We have limited capacity inside the venue. \n          You may be asked to queue until space inside becomes available.");
			t43 = space();
			li9 = element("li");
			t44 = text("Masks are required when indoors, unless you are exempt");
			t45 = space();
			li10 = element("li");
			t46 = text("You are encouraged to bring your own wired headphones to listen to exhibits");
			t47 = space();
			li11 = element("li");
			t48 = text("Please maintain 2m distance to other guests where possible");
			t49 = space();
			li12 = element("li");
			t50 = text("There will be sanitisation stations throughout the exhibition, \n          exits, entrances and at interactive pieces");
			t51 = space();
			li13 = element("li");
			t52 = text("No refreshments will be permitted inside the venue");
			t53 = space();
			li14 = element("li");
			t54 = text("On the opening night (Thursday 17th), there will be outdoor space and bar \n          available to socialise, maintaining social distancing.");
			t55 = space();
			section4 = element("section");
			h23 = element("h2");
			t56 = text("Visiting the exhibition in person");
			t57 = space();
			p6 = element("p");
			t58 = text("To manage capacity all visitors must register to \n      attend during a slot via \n      ");
			a4 = element("a");
			t59 = text("this Eventbrite");
			t60 = text(". \n      Please arrive at the beginning of your time slot, but please \n      be aware we have limited capacity inside the venue, \n      you may be asked to queue until space inside becomes available.");
			t61 = space();
			p7 = element("p");
			t62 = text("Opening Hours");
			t63 = space();
			ul3 = element("ul");
			li15 = element("li");
			t64 = text("Thursday 17th: 16:30-21:30");
			t65 = space();
			li16 = element("li");
			t66 = text("Friday 18th: 11:00-21:30");
			t67 = space();
			li17 = element("li");
			t68 = text("Saturday 19th: 11:00-21:30");
			t69 = space();
			li18 = element("li");
			t70 = text("Sunday 20th: 11:00-18:00");
			this.h();
		},
		l: function claim(nodes) {
			const head_nodes = query_selector_all("[data-svelte=\"svelte-6z0ryy\"]", document.head);
			head_nodes.forEach(detach_dev);
			t0 = claim_space(nodes);
			section0 = claim_element(nodes, "SECTION", { class: true });
			var section0_nodes = children(section0);
			div1 = claim_element(section0_nodes, "DIV", { class: true });
			var div1_nodes = children(div1);
			div0 = claim_element(div1_nodes, "DIV", { class: true });
			var div0_nodes = children(div0);
			h1 = claim_element(div0_nodes, "H1", { class: true });
			var h1_nodes = children(h1);
			t1 = claim_text(h1_nodes, "How to find us");
			h1_nodes.forEach(detach_dev);
			t2 = claim_space(div0_nodes);
			ul0 = claim_element(div0_nodes, "UL", { class: true });
			var ul0_nodes = children(ul0);
			li0 = claim_element(ul0_nodes, "LI", { class: true });
			var li0_nodes = children(li0);
			a0 = claim_element(li0_nodes, "A", { href: true });
			var a0_nodes = children(a0);
			t3 = claim_text(a0_nodes, "Location");
			a0_nodes.forEach(detach_dev);
			li0_nodes.forEach(detach_dev);
			t4 = claim_space(ul0_nodes);
			li1 = claim_element(ul0_nodes, "LI", { class: true });
			var li1_nodes = children(li1);
			a1 = claim_element(li1_nodes, "A", { href: true });
			var a1_nodes = children(a1);
			t5 = claim_text(a1_nodes, "Covid Guidance");
			a1_nodes.forEach(detach_dev);
			li1_nodes.forEach(detach_dev);
			t6 = claim_space(ul0_nodes);
			li2 = claim_element(ul0_nodes, "LI", { class: true });
			var li2_nodes = children(li2);
			a2 = claim_element(li2_nodes, "A", { href: true });
			var a2_nodes = children(a2);
			t7 = claim_text(a2_nodes, "Visiting in Person");
			a2_nodes.forEach(detach_dev);
			li2_nodes.forEach(detach_dev);
			ul0_nodes.forEach(detach_dev);
			div0_nodes.forEach(detach_dev);
			div1_nodes.forEach(detach_dev);
			section0_nodes.forEach(detach_dev);
			t8 = claim_space(nodes);
			section5 = claim_element(nodes, "SECTION", { class: true });
			var section5_nodes = children(section5);
			section1 = claim_element(section5_nodes, "SECTION", { class: true, id: true });
			var section1_nodes = children(section1);
			h20 = claim_element(section1_nodes, "H2", { class: true });
			var h20_nodes = children(h20);
			t9 = claim_text(h20_nodes, "How to get here");
			h20_nodes.forEach(detach_dev);
			t10 = claim_space(section1_nodes);
			p0 = claim_element(section1_nodes, "P", { class: true });
			var p0_nodes = children(p0);
			t11 = claim_text(p0_nodes, "Goldsmiths is in New Cross, South East London, five miles from central London.");
			p0_nodes.forEach(detach_dev);
			t12 = claim_space(section1_nodes);
			ul1 = claim_element(section1_nodes, "UL", { class: true });
			var ul1_nodes = children(ul1);
			li3 = claim_element(ul1_nodes, "LI", {});
			var li3_nodes = children(li3);
			t13 = claim_text(li3_nodes, "St. James Hatcham Building");
			li3_nodes.forEach(detach_dev);
			t14 = claim_space(ul1_nodes);
			li4 = claim_element(ul1_nodes, "LI", {});
			var li4_nodes = children(li4);
			t15 = claim_text(li4_nodes, "25 St James's");
			li4_nodes.forEach(detach_dev);
			t16 = claim_space(ul1_nodes);
			li5 = claim_element(ul1_nodes, "LI", {});
			var li5_nodes = children(li5);
			t17 = claim_text(li5_nodes, "Goldsmiths, University of London");
			li5_nodes.forEach(detach_dev);
			t18 = claim_space(ul1_nodes);
			li6 = claim_element(ul1_nodes, "LI", {});
			var li6_nodes = children(li6);
			t19 = claim_text(li6_nodes, "New Cross");
			li6_nodes.forEach(detach_dev);
			t20 = claim_space(ul1_nodes);
			li7 = claim_element(ul1_nodes, "LI", {});
			var li7_nodes = children(li7);
			t21 = claim_text(li7_nodes, "London SE14 6AD");
			li7_nodes.forEach(detach_dev);
			ul1_nodes.forEach(detach_dev);
			t22 = claim_space(section1_nodes);
			p1 = claim_element(section1_nodes, "P", { class: true });
			var p1_nodes = children(p1);
			t23 = claim_text(p1_nodes, "When visiting St. James Hatcham Building, turn off New Cross road and \n      walk up St James. The St James Hatcham Building is the ");
			strong = claim_element(p1_nodes, "STRONG", {});
			var strong_nodes = children(strong);
			t24 = claim_text(strong_nodes, "church");
			strong_nodes.forEach(detach_dev);
			t25 = claim_text(p1_nodes, " \n      at the end of the road.");
			p1_nodes.forEach(detach_dev);
			t26 = claim_space(section1_nodes);
			p2 = claim_element(section1_nodes, "P", { class: true });
			var p2_nodes = children(p2);
			t27 = claim_text(p2_nodes, "For more information ");
			a3 = claim_element(p2_nodes, "A", { href: true });
			var a3_nodes = children(a3);
			t28 = claim_text(a3_nodes, "click here");
			a3_nodes.forEach(detach_dev);
			t29 = claim_text(p2_nodes, ".");
			p2_nodes.forEach(detach_dev);
			section1_nodes.forEach(detach_dev);
			t30 = claim_space(section5_nodes);
			img = claim_element(section5_nodes, "IMG", { class: true, src: true, alt: true });
			t31 = claim_space(section5_nodes);
			section2 = claim_element(section5_nodes, "SECTION", { class: true });
			var section2_nodes = children(section2);
			h21 = claim_element(section2_nodes, "H2", { class: true });
			var h21_nodes = children(h21);
			t32 = claim_text(h21_nodes, "Public Transport");
			h21_nodes.forEach(detach_dev);
			t33 = claim_space(section2_nodes);
			p3 = claim_element(section2_nodes, "P", { class: true });
			var p3_nodes = children(p3);
			t34 = claim_text(p3_nodes, "The following buses stop outside Goldsmiths: \n      21, 36, 53, 136, 171, 172, 177, 225, 321, 343, 436 and 453.");
			p3_nodes.forEach(detach_dev);
			t35 = claim_space(section2_nodes);
			p4 = claim_element(section2_nodes, "P", { class: true });
			var p4_nodes = children(p4);
			t36 = claim_text(p4_nodes, "Goldsmiths is less than five minutesâ€™ \n      walk from both New Cross and New Cross Gate \n      railway and overground stations.");
			p4_nodes.forEach(detach_dev);
			section2_nodes.forEach(detach_dev);
			t37 = claim_space(section5_nodes);
			section3 = claim_element(section5_nodes, "SECTION", { class: true, id: true });
			var section3_nodes = children(section3);
			h22 = claim_element(section3_nodes, "H2", { class: true });
			var h22_nodes = children(h22);
			t38 = claim_text(h22_nodes, "COVID Guidance");
			h22_nodes.forEach(detach_dev);
			t39 = claim_space(section3_nodes);
			p5 = claim_element(section3_nodes, "P", { class: true });
			var p5_nodes = children(p5);
			t40 = claim_text(p5_nodes, "It is important to us that visitors and staff feel safe and comfortable in the \n      exhibition. To this end we are taking a number of precautions. \n      Please do follow the guidelines below to ensure you have a \n      safe and pleasant visit:");
			p5_nodes.forEach(detach_dev);
			t41 = claim_space(section3_nodes);
			ul2 = claim_element(section3_nodes, "UL", { class: true });
			var ul2_nodes = children(ul2);
			li8 = claim_element(ul2_nodes, "LI", {});
			var li8_nodes = children(li8);
			t42 = claim_text(li8_nodes, "We have limited capacity inside the venue. \n          You may be asked to queue until space inside becomes available.");
			li8_nodes.forEach(detach_dev);
			t43 = claim_space(ul2_nodes);
			li9 = claim_element(ul2_nodes, "LI", {});
			var li9_nodes = children(li9);
			t44 = claim_text(li9_nodes, "Masks are required when indoors, unless you are exempt");
			li9_nodes.forEach(detach_dev);
			t45 = claim_space(ul2_nodes);
			li10 = claim_element(ul2_nodes, "LI", {});
			var li10_nodes = children(li10);
			t46 = claim_text(li10_nodes, "You are encouraged to bring your own wired headphones to listen to exhibits");
			li10_nodes.forEach(detach_dev);
			t47 = claim_space(ul2_nodes);
			li11 = claim_element(ul2_nodes, "LI", {});
			var li11_nodes = children(li11);
			t48 = claim_text(li11_nodes, "Please maintain 2m distance to other guests where possible");
			li11_nodes.forEach(detach_dev);
			t49 = claim_space(ul2_nodes);
			li12 = claim_element(ul2_nodes, "LI", {});
			var li12_nodes = children(li12);
			t50 = claim_text(li12_nodes, "There will be sanitisation stations throughout the exhibition, \n          exits, entrances and at interactive pieces");
			li12_nodes.forEach(detach_dev);
			t51 = claim_space(ul2_nodes);
			li13 = claim_element(ul2_nodes, "LI", {});
			var li13_nodes = children(li13);
			t52 = claim_text(li13_nodes, "No refreshments will be permitted inside the venue");
			li13_nodes.forEach(detach_dev);
			t53 = claim_space(ul2_nodes);
			li14 = claim_element(ul2_nodes, "LI", {});
			var li14_nodes = children(li14);
			t54 = claim_text(li14_nodes, "On the opening night (Thursday 17th), there will be outdoor space and bar \n          available to socialise, maintaining social distancing.");
			li14_nodes.forEach(detach_dev);
			ul2_nodes.forEach(detach_dev);
			section3_nodes.forEach(detach_dev);
			t55 = claim_space(section5_nodes);
			section4 = claim_element(section5_nodes, "SECTION", { class: true, id: true });
			var section4_nodes = children(section4);
			h23 = claim_element(section4_nodes, "H2", { class: true });
			var h23_nodes = children(h23);
			t56 = claim_text(h23_nodes, "Visiting the exhibition in person");
			h23_nodes.forEach(detach_dev);
			t57 = claim_space(section4_nodes);
			p6 = claim_element(section4_nodes, "P", { class: true });
			var p6_nodes = children(p6);
			t58 = claim_text(p6_nodes, "To manage capacity all visitors must register to \n      attend during a slot via \n      ");
			a4 = claim_element(p6_nodes, "A", { href: true });
			var a4_nodes = children(a4);
			t59 = claim_text(a4_nodes, "this Eventbrite");
			a4_nodes.forEach(detach_dev);
			t60 = claim_text(p6_nodes, ". \n      Please arrive at the beginning of your time slot, but please \n      be aware we have limited capacity inside the venue, \n      you may be asked to queue until space inside becomes available.");
			p6_nodes.forEach(detach_dev);
			t61 = claim_space(section4_nodes);
			p7 = claim_element(section4_nodes, "P", { class: true });
			var p7_nodes = children(p7);
			t62 = claim_text(p7_nodes, "Opening Hours");
			p7_nodes.forEach(detach_dev);
			t63 = claim_space(section4_nodes);
			ul3 = claim_element(section4_nodes, "UL", { class: true });
			var ul3_nodes = children(ul3);
			li15 = claim_element(ul3_nodes, "LI", { style: true });
			var li15_nodes = children(li15);
			t64 = claim_text(li15_nodes, "Thursday 17th: 16:30-21:30");
			li15_nodes.forEach(detach_dev);
			t65 = claim_space(ul3_nodes);
			li16 = claim_element(ul3_nodes, "LI", {});
			var li16_nodes = children(li16);
			t66 = claim_text(li16_nodes, "Friday 18th: 11:00-21:30");
			li16_nodes.forEach(detach_dev);
			t67 = claim_space(ul3_nodes);
			li17 = claim_element(ul3_nodes, "LI", {});
			var li17_nodes = children(li17);
			t68 = claim_text(li17_nodes, "Saturday 19th: 11:00-21:30");
			li17_nodes.forEach(detach_dev);
			t69 = claim_space(ul3_nodes);
			li18 = claim_element(ul3_nodes, "LI", {});
			var li18_nodes = children(li18);
			t70 = claim_text(li18_nodes, "Sunday 20th: 11:00-18:00");
			li18_nodes.forEach(detach_dev);
			ul3_nodes.forEach(detach_dev);
			section4_nodes.forEach(detach_dev);
			section5_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			document.title = "Physical";
			attr_dev(h1, "class", "title");
			add_location(h1, file, 94, 6, 1551);
			attr_dev(a0, "href", "physical#location");
			add_location(a0, file, 96, 12, 1629);
			attr_dev(li0, "class", "svelte-mfu9su");
			add_location(li0, file, 96, 8, 1625);
			attr_dev(a1, "href", "physical#covid");
			add_location(a1, file, 97, 12, 1687);
			attr_dev(li1, "class", "svelte-mfu9su");
			add_location(li1, file, 97, 8, 1683);
			attr_dev(a2, "href", "physical#attendance");
			add_location(a2, file, 98, 12, 1748);
			attr_dev(li2, "class", "svelte-mfu9su");
			add_location(li2, file, 98, 8, 1744);
			attr_dev(ul0, "class", "page-nav svelte-mfu9su");
			add_location(ul0, file, 95, 6, 1595);
			attr_dev(div0, "class", "container");
			add_location(div0, file, 93, 4, 1521);
			attr_dev(div1, "class", "hero-body");
			add_location(div1, file, 92, 2, 1493);
			attr_dev(section0, "class", "hero is-primary");
			add_location(section0, file, 91, 0, 1457);
			attr_dev(h20, "class", "section-title svelte-mfu9su");
			add_location(h20, file, 106, 4, 1919);
			attr_dev(p0, "class", "svelte-mfu9su");
			add_location(p0, file, 107, 4, 1970);
			add_location(li3, file, 109, 6, 2071);
			add_location(li4, file, 110, 6, 2113);
			add_location(li5, file, 111, 6, 2142);
			add_location(li6, file, 112, 6, 2190);
			add_location(li7, file, 113, 6, 2215);
			attr_dev(ul1, "class", "svelte-mfu9su");
			add_location(ul1, file, 108, 4, 2060);
			add_location(strong, file, 117, 61, 2396);
			attr_dev(p1, "class", "svelte-mfu9su");
			add_location(p1, file, 115, 4, 2254);
			attr_dev(a3, "href", "https://www.gold.ac.uk/find-us/places/st-james-hatcham-building/");
			add_location(a3, file, 120, 28, 2488);
			attr_dev(p2, "class", "svelte-mfu9su");
			add_location(p2, file, 120, 4, 2464);
			attr_dev(section1, "class", "hatcham svelte-mfu9su");
			attr_dev(section1, "id", "location");
			add_location(section1, file, 105, 2, 1875);
			attr_dev(img, "class", "church-map svelte-mfu9su");
			if (img.src !== (img_src_value = "img/map.png")) attr_dev(img, "src", img_src_value);
			attr_dev(img, "alt", "Google map screenshot of St James Hatcham - Goldsmiths");
			add_location(img, file, 123, 2, 2599);
			attr_dev(h21, "class", "section-title svelte-mfu9su");
			add_location(h21, file, 126, 4, 2737);
			attr_dev(p3, "class", "svelte-mfu9su");
			add_location(p3, file, 127, 4, 2789);
			attr_dev(p4, "class", "svelte-mfu9su");
			add_location(p4, file, 131, 4, 2924);
			attr_dev(section2, "class", "transport svelte-mfu9su");
			add_location(section2, file, 125, 2, 2705);
			attr_dev(h22, "class", "section-title svelte-mfu9su");
			add_location(h22, file, 139, 4, 3127);
			attr_dev(p5, "class", "svelte-mfu9su");
			add_location(p5, file, 140, 4, 3177);
			add_location(li8, file, 147, 8, 3462);
			add_location(li9, file, 149, 8, 3597);
			add_location(li10, file, 150, 8, 3669);
			add_location(li11, file, 151, 8, 3762);
			add_location(li12, file, 152, 8, 3838);
			add_location(li13, file, 154, 8, 3972);
			add_location(li14, file, 155, 8, 4040);
			attr_dev(ul2, "class", "svelte-mfu9su");
			add_location(ul2, file, 146, 6, 3449);
			attr_dev(section3, "class", "covid svelte-mfu9su");
			attr_dev(section3, "id", "covid");
			add_location(section3, file, 138, 2, 3088);
			attr_dev(h23, "class", "section-title svelte-mfu9su");
			add_location(h23, file, 161, 4, 4264);
			attr_dev(a4, "href", "https://www.eventbrite.co.uk/e/chimera-garden-the-computational-arts-mamfa-degree-show-goldsmiths-tickets-119513047743");
			add_location(a4, file, 165, 6, 4431);
			attr_dev(p6, "class", "svelte-mfu9su");
			add_location(p6, file, 162, 4, 4333);
			attr_dev(p7, "class", "svelte-mfu9su");
			add_location(p7, file, 170, 4, 4792);
			add_location(li15, file, 172, 6, 4828);
			add_location(li16, file, 173, 6, 4879);
			add_location(li17, file, 174, 6, 4919);
			add_location(li18, file, 175, 6, 4961);
			attr_dev(ul3, "class", "svelte-mfu9su");
			add_location(ul3, file, 171, 4, 4817);
			attr_dev(section4, "class", "visit-us svelte-mfu9su");
			attr_dev(section4, "id", "attendance");
			add_location(section4, file, 160, 2, 4217);
			attr_dev(section5, "class", "main svelte-mfu9su");
			add_location(section5, file, 104, 0, 1850);
		},
		m: function mount(target, anchor) {
			insert_dev(target, t0, anchor);
			insert_dev(target, section0, anchor);
			append_dev(section0, div1);
			append_dev(div1, div0);
			append_dev(div0, h1);
			append_dev(h1, t1);
			append_dev(div0, t2);
			append_dev(div0, ul0);
			append_dev(ul0, li0);
			append_dev(li0, a0);
			append_dev(a0, t3);
			append_dev(ul0, t4);
			append_dev(ul0, li1);
			append_dev(li1, a1);
			append_dev(a1, t5);
			append_dev(ul0, t6);
			append_dev(ul0, li2);
			append_dev(li2, a2);
			append_dev(a2, t7);
			insert_dev(target, t8, anchor);
			insert_dev(target, section5, anchor);
			append_dev(section5, section1);
			append_dev(section1, h20);
			append_dev(h20, t9);
			append_dev(section1, t10);
			append_dev(section1, p0);
			append_dev(p0, t11);
			append_dev(section1, t12);
			append_dev(section1, ul1);
			append_dev(ul1, li3);
			append_dev(li3, t13);
			append_dev(ul1, t14);
			append_dev(ul1, li4);
			append_dev(li4, t15);
			append_dev(ul1, t16);
			append_dev(ul1, li5);
			append_dev(li5, t17);
			append_dev(ul1, t18);
			append_dev(ul1, li6);
			append_dev(li6, t19);
			append_dev(ul1, t20);
			append_dev(ul1, li7);
			append_dev(li7, t21);
			append_dev(section1, t22);
			append_dev(section1, p1);
			append_dev(p1, t23);
			append_dev(p1, strong);
			append_dev(strong, t24);
			append_dev(p1, t25);
			append_dev(section1, t26);
			append_dev(section1, p2);
			append_dev(p2, t27);
			append_dev(p2, a3);
			append_dev(a3, t28);
			append_dev(p2, t29);
			append_dev(section5, t30);
			append_dev(section5, img);
			append_dev(section5, t31);
			append_dev(section5, section2);
			append_dev(section2, h21);
			append_dev(h21, t32);
			append_dev(section2, t33);
			append_dev(section2, p3);
			append_dev(p3, t34);
			append_dev(section2, t35);
			append_dev(section2, p4);
			append_dev(p4, t36);
			append_dev(section5, t37);
			append_dev(section5, section3);
			append_dev(section3, h22);
			append_dev(h22, t38);
			append_dev(section3, t39);
			append_dev(section3, p5);
			append_dev(p5, t40);
			append_dev(section3, t41);
			append_dev(section3, ul2);
			append_dev(ul2, li8);
			append_dev(li8, t42);
			append_dev(ul2, t43);
			append_dev(ul2, li9);
			append_dev(li9, t44);
			append_dev(ul2, t45);
			append_dev(ul2, li10);
			append_dev(li10, t46);
			append_dev(ul2, t47);
			append_dev(ul2, li11);
			append_dev(li11, t48);
			append_dev(ul2, t49);
			append_dev(ul2, li12);
			append_dev(li12, t50);
			append_dev(ul2, t51);
			append_dev(ul2, li13);
			append_dev(li13, t52);
			append_dev(ul2, t53);
			append_dev(ul2, li14);
			append_dev(li14, t54);
			append_dev(section5, t55);
			append_dev(section5, section4);
			append_dev(section4, h23);
			append_dev(h23, t56);
			append_dev(section4, t57);
			append_dev(section4, p6);
			append_dev(p6, t58);
			append_dev(p6, a4);
			append_dev(a4, t59);
			append_dev(p6, t60);
			append_dev(section4, t61);
			append_dev(section4, p7);
			append_dev(p7, t62);
			append_dev(section4, t63);
			append_dev(section4, ul3);
			append_dev(ul3, li15);
			append_dev(li15, t64);
			append_dev(ul3, t65);
			append_dev(ul3, li16);
			append_dev(li16, t66);
			append_dev(ul3, t67);
			append_dev(ul3, li17);
			append_dev(li17, t68);
			append_dev(ul3, t69);
			append_dev(ul3, li18);
			append_dev(li18, t70);
		},
		p: noop,
		i: noop,
		o: noop,
		d: function destroy(detaching) {
			if (detaching) detach_dev(t0);
			if (detaching) detach_dev(section0);
			if (detaching) detach_dev(t8);
			if (detaching) detach_dev(section5);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function instance($$self, $$props) {
	const writable_props = [];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$") console.warn(`<Physical> was created with unknown prop '${key}'`);
	});

	let { $$slots = {}, $$scope } = $$props;
	validate_slots("Physical", $$slots, []);
	return [];
}

class Physical extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance, create_fragment, safe_not_equal, {});

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "Physical",
			options,
			id: create_fragment.name
		});
	}
}

export default Physical;
